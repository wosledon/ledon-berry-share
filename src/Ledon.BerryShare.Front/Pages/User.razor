
@page "/user"
@using Ledon.BerryShare.Shared
@using Ledon.BerryShare.Shared.Entities
@using Ledon.BerryShare.Shared.Results
@inject Services.ApiService ApiService
@inject IJSRuntime JSRuntime

<div class="d-flex justify-content-between align-items-center mb-4">
    <div class="d-flex align-items-center">
        <div class="bg-primary rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 40px; height: 40px;">
            <i class="bi bi-people-fill text-white"></i>
        </div>
        <div>
            <h3 class="mb-0">人员管理</h3>
            <small class="text-muted">管理公会成员信息</small>
        </div>
    </div>
    <button class="btn btn-primary" @onclick="ShowAdd">
        <i class="bi bi-plus-lg me-2"></i>新增人员
    </button>
</div>

<!-- 搜索筛选卡片 -->
<div class="card shadow-sm mb-4">
    <div class="card-body">
        <div class="row g-3">
            <div class="col-md-4">
                <label class="form-label text-muted small">搜索条件</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-search"></i>
                    </span>
                    <input class="form-control" placeholder="搜索姓名或电话..." @bind="search" @bind:event="oninput" />
                </div>
            </div>
            <div class="col-md-3">
                <label class="form-label text-muted small">所属公会</label>
                <select class="form-select" @bind="selectedGuildId">
                    <option value="">全部公会</option>
                    @foreach (var g in guilds)
                    {
                        <option value="@g.Id">@g.Name</option>
                    }
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <div class="btn-group w-100">
                    <button class="btn btn-primary" @onclick="OnSearch">
                        <i class="bi bi-search me-1"></i>搜索
                    </button>
                    <button class="btn btn-outline-secondary" @onclick="ResetSearch">
                        <i class="bi bi-arrow-clockwise me-1"></i>重置
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- 新增弹窗 -->
<div class="modal fade @(showAddModal ? "show d-block" : "")" tabindex="-1" style="background:rgba(0,0,0,0.3);" aria-modal="true" role="dialog" @onclick="CloseAddModal">
    <div class="modal-dialog">
        <div class="modal-content" @onclick:stopPropagation="true">
            <div class="modal-header">
                <h5 class="modal-title">新增人员</h5>
                <button type="button" class="btn-close" @onclick="CloseAddModal"></button>
            </div>
            <div class="modal-body">
                @if (addUser != null)
                {
                    <div class="mb-3">
                        <label class="form-label">姓名</label>
                        <input class="form-control" @bind="addUser.Name" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">电话</label>
                        <input class="form-control" @bind="addUser.Tel" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">所属公会</label>
                        <select class="form-select" @bind="addUser.GuildId">
                            <option value="">请选择公会</option>
                            @foreach (var g in guilds)
                            {
                                <option value="@g.Id">@g.Name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">流水组成</label>
                        <select class="form-select" @bind="addUser.GiftFlowTypeId">
                            <option value="">请选择流水组成</option>
                            @foreach (var gft in giftFlowTypes.Where(x => x.GuildId == addUser.GuildId || addUser.GuildId == Guid.Empty))
                            {
                                <option value="@gft.Id">@gft.Name</option>
                            }
                        </select>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" @onclick="SaveAdd">保存</button>
                <button class="btn btn-secondary" @onclick="CloseAddModal">取消</button>
            </div>
        </div>
    </div>
</div>

@if (users == null)
{
    <div class="text-center py-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">加载中...</span>
        </div>
        <p class="text-muted mt-3">数据加载中...</p>
    </div>
}
else if (!users.Any())
{
    <div class="card shadow-sm">
        <div class="card-body text-center py-5">
            <div class="mb-4">
                <i class="bi bi-inbox" style="font-size: 3rem; color: #6c757d;"></i>
            </div>
            <h5 class="text-muted">暂无人员数据</h5>
            <p class="text-muted">点击上方"新增人员"按钮开始添加</p>
            <button class="btn btn-primary" @onclick="ShowAdd">
                <i class="bi bi-plus-lg me-2"></i>新增人员
            </button>
        </div>
    </div>
}
else
{
    <div class="card shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="border-0 fw-semibold">
                                <i class="bi bi-person me-2"></i>姓名
                            </th>
                            <th class="border-0 fw-semibold">
                                <i class="bi bi-telephone me-2"></i>电话
                            </th>
                            <th class="border-0 fw-semibold">
                                <i class="bi bi-building me-2"></i>公会
                            </th>
                            <th class="border-0 fw-semibold">
                                <i class="bi bi-diagram-3 me-2"></i>流水组成
                            </th>
                            <th class="border-0 fw-semibold">
                                <i class="bi bi-calendar me-2"></i>创建时间
                            </th>
                            <th class="border-0 fw-semibold text-center" width="200">操作</th>
                        </tr>
                    </thead>
                    <tbody>
            @foreach (var u in users)
            {
                <tr class="align-middle">
                    <td>
                        <div class="d-flex align-items-center">
                            <div class="avatar-sm bg-primary rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 32px; height: 32px;">
                                <span class="text-white small fw-bold">@u.Name.Take(1).FirstOrDefault()</span>
                            </div>
                            <span class="fw-semibold">@u.Name</span>
                        </div>
                    </td>
                    <td>
                        <span class="text-muted">
                            <i class="bi bi-telephone me-1"></i>@u.Tel
                        </span>
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(u.GuildName))
                        {
                            <span class="badge bg-light text-dark">
                                <i class="bi bi-building me-1"></i>@u.GuildName
                            </span>
                        }
                        else
                        {
                            <span class="text-muted">-</span>
                        }
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(u.GiftFlowTypeName))
                        {
                            <span class="badge bg-info text-white">@u.GiftFlowTypeName</span>
                        }
                        else
                        {
                            <span class="text-muted">未设置</span>
                        }
                    </td>
                    <td>
                        <small class="text-muted">@u.CreateAt.ToString("yyyy-MM-dd HH:mm")</small>
                    </td>
                    <td>
                        <div class="btn-group btn-group-sm" role="group">
                            <button class="btn btn-outline-info" @onclick="() => ShowDetail(u)" title="查看详情">
                                <i class="bi bi-eye"></i>
                            </button>
                            <button class="btn btn-outline-warning" @onclick="() => ShowEdit(u)" title="编辑">
                                <i class="bi bi-pencil"></i>
                            </button>
                            <button class="btn btn-outline-danger" @onclick="() => DeleteUser(u.Id)" title="删除">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
        </div>
    </div>
</div>

<!-- 分页 -->
<nav class="mt-4">
    <ul class="pagination justify-content-center">
        <li class="page-item @(pageIndex == 1 ? "disabled" : "")">
            <button class="page-link" @onclick="PrevPage">
                <i class="bi bi-chevron-left"></i> 上一页
            </button>
        </li>
        <li class="page-item disabled">
            <span class="page-link bg-light">第 @pageIndex 页 / 共 @totalPages 页</span>
        </li>
        <li class="page-item @(pageIndex == totalPages ? "disabled" : "")">
            <button class="page-link" @onclick="NextPage">
                下一页 <i class="bi bi-chevron-right"></i>
            </button>
        </li>
    </ul>
</nav>
}

<!-- 详情弹窗 -->
<div class="modal fade @(showDetailModal ? "show d-block" : "")" tabindex="-1" style="background:rgba(0,0,0,0.3);" aria-modal="true" role="dialog" @onclick="CloseDetailModal">
    <div class="modal-dialog">
        <div class="modal-content" @onclick:stopPropagation="true">
            <div class="modal-header">
                <h5 class="modal-title">人员详情</h5>
                <button type="button" class="btn-close" @onclick="CloseDetailModal"></button>
            </div>
            <div class="modal-body">
                @if (selectedUser != null)
                {
                    <div><strong>姓名：</strong> @selectedUser.Name</div>
                    <div><strong>电话：</strong> @selectedUser.Tel</div>
                    <div><strong>公会：</strong> @selectedUser.GuildName</div>
                    <div><strong>流水组成：</strong> @selectedUser.GiftFlowTypeName</div>
                    <div><strong>创建时间：</strong> @selectedUser.CreateAt.ToString("yyyy-MM-dd HH:mm")</div>
                }
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" @onclick="CloseDetailModal">关闭</button>
            </div>
        </div>
    </div>
</div>

<!-- 编辑弹窗 -->
<div class="modal fade @(showEditModal ? "show d-block" : "")" tabindex="-1" style="background:rgba(0,0,0,0.3);" aria-modal="true" role="dialog" @onclick="CloseEditModal">
    <div class="modal-dialog">
        <div class="modal-content" @onclick:stopPropagation="true">
            <div class="modal-header">
                <h5 class="modal-title">编辑人员</h5>
                <button type="button" class="btn-close" @onclick="CloseEditModal"></button>
            </div>
            <div class="modal-body">
                @if (editUser != null)
                {
                    <div class="mb-3">
                        <label class="form-label">姓名</label>
                        <input class="form-control" @bind="editUser.Name" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">电话</label>
                        <input class="form-control" @bind="editUser.Tel" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">所属公会</label>
                        <select class="form-select" @bind="editUser.GuildId">
                            <option value="">请选择公会</option>
                            @foreach (var g in guilds)
                            {
                                <option value="@g.Id">@g.Name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">流水组成</label>
                        <select class="form-select" @bind="editUser.GiftFlowTypeId">
                            <option value="">请选择流水组成</option>
                            @foreach (var gft in giftFlowTypes.Where(x => x.GuildId == editUser.GuildId || editUser.GuildId == Guid.Empty))
                            {
                                <option value="@gft.Id">@gft.Name</option>
                            }
                        </select>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" @onclick="SaveEdit">保存</button>
                <button class="btn btn-secondary" @onclick="CloseEditModal">取消</button>
            </div>
        </div>
    </div>
</div>

@code {
    private List<UserResult>? users;
    private int pageIndex = 1;
    private int pageSize = 10;
    private int totalPages = 1;
    private string search = string.Empty;

    private List<Ledon.BerryShare.Shared.Results.GuildResult> guilds = new();
    private List<Ledon.BerryShare.Shared.Results.GiftFlowTypeResult> giftFlowTypes = new();
    private Guid? selectedGuildId = null;

    private UserResult? selectedUser;
    private bool showDetailModal = false;

    private UserResult? editUser;
    private bool showEditModal = false;

    private UserResult? addUser;
    private bool showAddModal = false;
    private void ShowAdd()
    {
        addUser = new UserResult();
        addUser.GuildId = selectedGuildId ?? Guid.Empty;
        showAddModal = true;
    }

    private void CloseAddModal()
    {
        showAddModal = false;
        addUser = null;
    }

    // ...existing code...
    // 删除重复的SaveAdd方法，保留下方带GuildId处理的实现

    protected override async Task OnInitializedAsync()
    {
        await LoadGuilds();
        await LoadGiftFlowTypes();
        await LoadData();
    }

    private async Task LoadGuilds()
    {
        var result = await ApiService.GetAsync<BerryResult<List<Ledon.BerryShare.Shared.Results.GuildResult>>>("api/v1/guild/list?pageIndex=1&pageSize=100");
        guilds = result?.Data ?? new List<Ledon.BerryShare.Shared.Results.GuildResult>();
    }

    private async Task LoadGiftFlowTypes()
    {
        var result = await ApiService.GetAsync<BerryResult<List<Ledon.BerryShare.Shared.Results.GiftFlowTypeResult>>>("api/v1/giftflowtype/list?pageIndex=1&pageSize=100");
        giftFlowTypes = result?.Data ?? new List<Ledon.BerryShare.Shared.Results.GiftFlowTypeResult>();
    }

    private async Task LoadData()
    {
        var guildParam = selectedGuildId.HasValue ? $"&guildId={selectedGuildId}" : "";
        var query = $"api/v1/user/list?search={search}{guildParam}&pageIndex={pageIndex}&pageSize={pageSize}";
        var result = await ApiService.GetAsync<BerryResult<List<UserResult>>>(query);
        users = result?.Data ?? new List<UserResult>();
        totalPages = (result?.TotalCount / pageSize) ?? 1;
    }

    private async Task OnSearch()
    {
        pageIndex = 1;
        await LoadData();
    }

    private async Task ResetSearch()
    {
        search = string.Empty;
        selectedGuildId = null;
        pageIndex = 1;
        await LoadData();
    }

    private async Task PrevPage()
    {
        if (pageIndex > 1)
        {
            pageIndex--;
            await LoadData();
        }
    }

    private async Task NextPage()
    {
        if (pageIndex < totalPages)
        {
            pageIndex++;
            await LoadData();
        }
    }

    private void ShowDetail(UserResult user)
    {
        selectedUser = user;
        showDetailModal = true;
    }

    private void CloseDetailModal()
    {
        showDetailModal = false;
        selectedUser = null;
    }

    private void ShowEdit(UserResult user)
    {
        editUser = new UserResult
        {
            Id = user.Id,
            Name = user.Name,
            Tel = user.Tel,
            GuildId = user.GuildId,
            GiftFlowTypeId = user.GiftFlowTypeId
        };
        showEditModal = true;
    }

    private void CloseEditModal()
    {
        showEditModal = false;
        editUser = null;
    }

    private async Task SaveAdd()
    {
        if (addUser != null)
        {
            var userEntity = new UserEntity
            {
                Name = addUser.Name,
                Tel = addUser.Tel,
                GuildId = addUser.GuildId == Guid.Empty ? null : addUser.GuildId,
                GiftFlowTypeId = addUser.GiftFlowTypeId == Guid.Empty ? null : addUser.GiftFlowTypeId
            };
            var result = await ApiService.PostAsync<BerryResult<UserResult>>("api/v1/user/create", userEntity);
            await LoadData();
            CloseAddModal();
        }
    }

    private async Task SaveEdit()
    {
        if (editUser != null)
        {
            var userEntity = new UserEntity
            {
                Id = editUser.Id,
                Name = editUser.Name,
                Tel = editUser.Tel,
                GuildId = editUser.GuildId == Guid.Empty ? null : editUser.GuildId,
                GiftFlowTypeId = editUser.GiftFlowTypeId == Guid.Empty ? null : editUser.GiftFlowTypeId
            };
            var result = await ApiService.PutAsync<BerryResult<UserResult>>("api/v1/user/update", userEntity);
            await LoadData();
            CloseEditModal();
        }
    }

    private async Task DeleteUser(Guid userId)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "确定要删除这个用户吗？"))
        {
            try
            {
                var result = await ApiService.DeleteAsync<BerryResult<bool>>($"api/v1/user/delete/{userId}");
                if (result?.Code == BerryResult.StatusCodeEnum.Success)
                {
                    await LoadData();
                }
            }
            catch (Exception ex)
            {
                await JSRuntime.InvokeVoidAsync("alert", $"删除失败: {ex.Message}");
            }
        }
    }
}
